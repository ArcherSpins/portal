stages:
  - build
  - deploy

build:
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --target builder -t internal-portal-front-builder -f ci_cd/docker/Dockerfile .
    - docker build --target web -t $CI_REGISTRY/$CI_PROJECT_PATH/$GIT_BRANCH:latest -f ci_cd/docker/Dockerfile .
    - docker tag ${GIT_BRANCH} $CI_REGISTRY/$CI_PROJECT_PATH/$GIT_BRANCH:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$GIT_BRANCH:latest
    - docker rmi $CI_REGISTRY/$CI_PROJECT_PATH/$GIT_BRANCH:latest
  tags:
    - build
#  only:
#    - develop

.deploy: &deploy_template
  stage: deploy
  variables:
    TARGET: ''
  script:
    - cd ci_cd/ansible && ansible-playbook books/deploy.yml -i inventories/$TARGET -e docker_registry=$CI_REGISTRY -e docker_login="gitlab-ci-token" -e docker_pass=$CI_JOB_TOKEN -e docker_image=$CI_REGISTRY/$CI_PROJECT_PATH/${GIT_BRANCH}:latest
  tags:
    - deploy

deploy_dev:
  <<: *deploy_template
  variables:
    TARGET: develop
  only:
    - develop

deploy_testing:
  <<: *deploy_template
  variables:
    TARGET: testing
  only:
    - testing

deploy_prod:
  <<: *deploy_template
  variables:
    TARGET: prod
  only:
    - prod
